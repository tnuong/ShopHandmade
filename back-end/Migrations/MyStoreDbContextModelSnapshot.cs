// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.Data;

#nullable disable

namespace back_end.Migrations
{
    [DbContext(typeof(MyStoreDbContext))]
    partial class MyStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DanhGiaSanPhamNguoiDung", b =>
                {
                    b.Property<int>("DanhSachDanhGiaYeuThichMaDanhGiaSP")
                        .HasColumnType("int");

                    b.Property<string>("DanhSachNguoiYeuThichId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DanhSachDanhGiaYeuThichMaDanhGiaSP", "DanhSachNguoiYeuThichId");

                    b.HasIndex("DanhSachNguoiYeuThichId");

                    b.ToTable("DanhGiaSanPhamNguoiDung");
                });

            modelBuilder.Entity("DanhSachYeuThichSanPham", b =>
                {
                    b.Property<int>("DanhSachSanPhamMaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("DanhSachYeuThichMaDanhSachYeuThich")
                        .HasColumnType("int");

                    b.HasKey("DanhSachSanPhamMaSanPham", "DanhSachYeuThichMaDanhSachYeuThich");

                    b.HasIndex("DanhSachYeuThichMaDanhSachYeuThich");

                    b.ToTable("DanhSachYeuThichSanPham");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("MaVaiTro");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaDongBo");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TenVaiTro");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TenVaiTroChuanHoa");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[TenVaiTroChuanHoa] IS NOT NULL");

                    b.ToTable("VaiTros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b2b67bf7-8bae-447b-b293-dd638bea387b",
                            ConcurrencyStamp = "1",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "8088491f-213a-420d-a11e-feb4f2788552",
                            ConcurrencyStamp = "1",
                            Name = "CUSTOMER",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "6cc53e84-6847-48da-a787-7a32b7c2cf76",
                            ConcurrencyStamp = "1",
                            Name = "EMPLOYEE",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("MaNguoiDung");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("MaVaiTro");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("NguoiDungVaiTros", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "aec038d4-4b01-4088-93ac-fc79bed54d8d",
                            RoleId = "b2b67bf7-8bae-447b-b293-dd638bea387b"
                        });
                });

            modelBuilder.Entity("back_end.Core.Models.BaiViet", b =>
                {
                    b.Property<int>("MaBaiViet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBaiViet"));

                    b.Property<string>("HinhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiAn")
                        .HasColumnType("bit");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.Property<string>("VanBanTho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBaiViet");

                    b.HasIndex("MaTacGia");

                    b.ToTable("BaiViets");
                });

            modelBuilder.Entity("back_end.Core.Models.BienTheSanPham", b =>
                {
                    b.Property<int>("MaBienTheSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBienTheSanPham"));

                    b.Property<string>("DuongDanAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKichThuoc")
                        .HasColumnType("int");

                    b.Property<int>("MaMauSac")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaBienTheSanPham");

                    b.HasIndex("MaKichThuoc");

                    b.HasIndex("MaMauSac");

                    b.HasIndex("MaSanPham");

                    b.ToTable("BienTheSanPhams");
                });

            modelBuilder.Entity("back_end.Core.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaCTDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCTDH"));

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int>("MaBienTheSP")
                        .HasColumnType("int");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("ThanhTienSauKhuyenMai")
                        .HasColumnType("float");

                    b.Property<double>("ThanhTienTruocKhuyenMai")
                        .HasColumnType("float");

                    b.Property<double>("TienKhuyenMai")
                        .HasColumnType("float");

                    b.HasKey("MaCTDH");

                    b.HasIndex("MaBienTheSP");

                    b.HasIndex("MaDonHang");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhGiaSanPham", b =>
                {
                    b.Property<int>("MaDanhGiaSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhGiaSP"));

                    b.Property<string>("MaNguoiDanhGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoSaoDanhGia")
                        .HasColumnType("int");

                    b.HasKey("MaDanhGiaSP");

                    b.HasIndex("MaNguoiDanhGia");

                    b.HasIndex("MaSanPham");

                    b.ToTable("DanhGiaSanPhams");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhMuc", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhMuc"));

                    b.Property<int?>("DanhMucChaMaDanhMuc")
                        .HasColumnType("int");

                    b.Property<int?>("MaDanhMucCha")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaDanhMuc");

                    b.HasIndex("DanhMucChaMaDanhMuc");

                    b.ToTable("DanhMucs");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhSachYeuThich", b =>
                {
                    b.Property<int>("MaDanhSachYeuThich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhSachYeuThich"));

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDanhSachYeuThich");

                    b.HasIndex("MaNguoiDung")
                        .IsUnique();

                    b.ToTable("DanhSachYeuThichs");
                });

            modelBuilder.Entity("back_end.Core.Models.DiaChiGiaoHang", b =>
                {
                    b.Property<int>("MaDCGH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDCGH"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("MacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDCGH");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("DiaChiGiaoHangs");
                });

            modelBuilder.Entity("back_end.Core.Models.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDiaChiGiaoHang")
                        .HasColumnType("int");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaThanhToan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("TienKhuyenMai")
                        .HasColumnType("float");

                    b.Property<double>("TongTienSauKhuyenMai")
                        .HasColumnType("float");

                    b.Property<double>("TongTienTruocKhuyenMai")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaDiaChiGiaoHang");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("MaThanhToan")
                        .IsUnique();

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("back_end.Core.Models.HienThiBanner", b =>
                {
                    b.Property<int>("MaHienThiBanner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHienThiBanner"));

                    b.Property<string>("DuongDanhAnhNen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaNgan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutHanhDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHienThiBanner");

                    b.ToTable("HienThiBanners");
                });

            modelBuilder.Entity("back_end.Core.Models.HienThiDanhGia", b =>
                {
                    b.Property<int>("MaHienThiDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHienThiDanhGia"));

                    b.Property<int>("MaDanhGiaSanPham")
                        .HasColumnType("int");

                    b.HasKey("MaHienThiDanhGia");

                    b.HasIndex("MaDanhGiaSanPham");

                    b.ToTable("HienThiDanhGias");
                });

            modelBuilder.Entity("back_end.Core.Models.HinhAnhBienTheSanPham", b =>
                {
                    b.Property<int>("MaHinhAnhBienTheSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHinhAnhBienTheSanPham"));

                    b.Property<string>("DuongDanAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaBienTheSanPham")
                        .HasColumnType("int");

                    b.HasKey("MaHinhAnhBienTheSanPham");

                    b.HasIndex("MaBienTheSanPham");

                    b.ToTable("HinhAnhBienTheSanPhams");
                });

            modelBuilder.Entity("back_end.Core.Models.HinhAnhSanPham", b =>
                {
                    b.Property<int>("MaHinhAnhSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHinhAnhSanPham"));

                    b.Property<string>("DuongDanAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaSanPham")
                        .HasColumnType("int");

                    b.HasKey("MaHinhAnhSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("HinhAnhSanPhams");
                });

            modelBuilder.Entity("back_end.Core.Models.KhuyenMai", b =>
                {
                    b.Property<int>("MaKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhuyenMai"));

                    b.Property<double>("GiaTriGiam")
                        .HasColumnType("float");

                    b.Property<string>("LoaiKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhuyenMai");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("back_end.Core.Models.KichThuoc", b =>
                {
                    b.Property<int>("MaKichThuoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKichThuoc"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKichThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaKichThuoc");

                    b.ToTable("KichThuocs");
                });

            modelBuilder.Entity("back_end.Core.Models.LichSuDonHang", b =>
                {
                    b.Property<int>("MaLichSuDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichSuDonHang"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ThoiGianChinhSua")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLichSuDonHang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("LichSuDonHangs");
                });

            modelBuilder.Entity("back_end.Core.Models.MauSac", b =>
                {
                    b.Property<int>("MaMauSac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMauSac"));

                    b.Property<string>("MaThapLucPhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaMauSac");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("back_end.Core.Models.NguoiDung", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int")
                        .HasColumnName("SoLanDangNhapThatBai");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaDongBo");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("XacThucEmail");

                    b.Property<string>("HinhAnhBia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("ChoPhepKhoa");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("ThoiGianKhoa");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("EmailChuanHoa");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TenDangNhapChuanHoa");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MatKhauMaHoa");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SoDienThoai");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("XacThucSoDienThoai");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaBaoMat");

                    b.Property<DateTime>("ThoiGianHoatDongGanDay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.Property<bool>("TrangThaiKhoa")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("KichHoat2Lop");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TenDangNhap");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[TenDangNhapChuanHoa] IS NOT NULL");

                    b.ToTable("NguoiDungs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "aec038d4-4b01-4088-93ac-fc79bed54d8d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8407953d-7070-40ec-966c-dfe1152bed40",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            HoVaTen = "Thanh Nương",
                            LockoutEnabled = false,
                            NgayTao = new DateTime(2025, 5, 8, 22, 16, 8, 194, DateTimeKind.Local).AddTicks(2655),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEIc1ShpzvS4TC04B4Edx4IHCKNtRW1wQV905Wad2Oi8qIeDCpjkODwkJi+Vd/S9G7Q==",
                            PhoneNumber = "0123456789",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "97c6bd48-dbe6-41ae-adc9-1247707fbb09",
                            ThoiGianHoatDongGanDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrangThaiHoatDong = false,
                            TrangThaiKhoa = false,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("back_end.Core.Models.NhaCungCap", b =>
                {
                    b.Property<int>("MaNhaCungCap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaCungCap"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaNhaCungCap");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("back_end.Core.Models.NhaSanXuat", b =>
                {
                    b.Property<int>("MaNhaSX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaSX"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaSX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaSX");

                    b.ToTable("NhaSanXuats");
                });

            modelBuilder.Entity("back_end.Core.Models.NhanHieu", b =>
                {
                    b.Property<int>("MaNhanHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhanHieu"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaNhanHieu");

                    b.ToTable("NhanHieus");
                });

            modelBuilder.Entity("back_end.Core.Models.NhomChat", b =>
                {
                    b.Property<string>("MaNhomChat")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaTinNhan")
                        .HasColumnType("int");

                    b.Property<int>("SoTinNhanChuaDoc")
                        .HasColumnType("int");

                    b.HasKey("MaNhomChat");

                    b.HasIndex("MaTinNhan")
                        .IsUnique();

                    b.ToTable("NhomChats");
                });

            modelBuilder.Entity("back_end.Core.Models.SanPham", b =>
                {
                    b.Property<int>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSanPham"));

                    b.Property<double>("GiaCu")
                        .HasColumnType("float");

                    b.Property<double>("GiaHienTai")
                        .HasColumnType("float");

                    b.Property<double>("GiaNhap")
                        .HasColumnType("float");

                    b.Property<string>("HinhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhPhongTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<int>("MaNhaSanXuat")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanHieu")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiXoa")
                        .HasColumnType("bit");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaNhaSanXuat");

                    b.HasIndex("MaNhanHieu");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("back_end.Core.Models.SanPhamKhuyenMai", b =>
                {
                    b.Property<int>("MaSanPhamKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSanPhamKhuyenMai"));

                    b.Property<int>("MaKhuyenMai")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.HasKey("MaSanPhamKhuyenMai");

                    b.HasIndex("MaKhuyenMai");

                    b.HasIndex("MaSanPham");

                    b.ToTable("SanPhamKhuyenMais");
                });

            modelBuilder.Entity("back_end.Core.Models.ThanhToan", b =>
                {
                    b.Property<int>("MaThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThanhToan"));

                    b.Property<string>("MaGiaoDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaThanhToan");

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("back_end.Core.Models.ThietBiThongBao", b =>
                {
                    b.Property<int>("MaThietBi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThietBi"));

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("MaThietBi");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("ThietBiThongBaos");
                });

            modelBuilder.Entity("back_end.Core.Models.ThongBao", b =>
                {
                    b.Property<int>("MaThongBao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThongBao"));

                    b.Property<string>("LoaiThongBao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MaThamChieu")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiDoc")
                        .HasColumnType("bit");

                    b.HasKey("MaThongBao");

                    b.HasIndex("MaNguoiNhan");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("back_end.Core.Models.TinNhan", b =>
                {
                    b.Property<int>("MaTinNhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTinNhan"));

                    b.Property<string>("MaNguoiGui")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianDoc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThaiDoc")
                        .HasColumnType("bit");

                    b.HasKey("MaTinNhan");

                    b.HasIndex("MaNguoiGui");

                    b.HasIndex("MaNguoiNhan");

                    b.ToTable("TinNhans");
                });

            modelBuilder.Entity("back_end.Core.Models.TinNhanHinhAnh", b =>
                {
                    b.Property<int>("MaTinNhanHinhAnh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTinNhanHinhAnh"));

                    b.Property<string>("DuongDanAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaTinNhan")
                        .HasColumnType("int");

                    b.HasKey("MaTinNhanHinhAnh");

                    b.HasIndex("MaTinNhan");

                    b.ToTable("HinhAnhTinNhans");
                });

            modelBuilder.Entity("DanhGiaSanPhamNguoiDung", b =>
                {
                    b.HasOne("back_end.Core.Models.DanhGiaSanPham", null)
                        .WithMany()
                        .HasForeignKey("DanhSachDanhGiaYeuThichMaDanhGiaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("DanhSachNguoiYeuThichId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DanhSachYeuThichSanPham", b =>
                {
                    b.HasOne("back_end.Core.Models.SanPham", null)
                        .WithMany()
                        .HasForeignKey("DanhSachSanPhamMaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.DanhSachYeuThich", null)
                        .WithMany()
                        .HasForeignKey("DanhSachYeuThichMaDanhSachYeuThich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back_end.Core.Models.BaiViet", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "TacGia")
                        .WithMany("DanhSachBaiViet")
                        .HasForeignKey("MaTacGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TacGia");
                });

            modelBuilder.Entity("back_end.Core.Models.BienTheSanPham", b =>
                {
                    b.HasOne("back_end.Core.Models.KichThuoc", "KichThuoc")
                        .WithMany("DanhSachBienTheSanPham")
                        .HasForeignKey("MaKichThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.MauSac", "MauSac")
                        .WithMany("DanhSachBienTheSP")
                        .HasForeignKey("MaMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.SanPham", "SanPham")
                        .WithMany("DanhSachBienTheSP")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KichThuoc");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("back_end.Core.Models.BienTheSanPham", "BienTheSanPham")
                        .WithMany("DanhSachChiTietDonHang")
                        .HasForeignKey("MaBienTheSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.DonHang", "DonHang")
                        .WithMany("DanhSachChiTietDonHang")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienTheSanPham");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhGiaSanPham", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiDanhGia")
                        .WithMany("DanhSachDanhGia")
                        .HasForeignKey("MaNguoiDanhGia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.SanPham", "SanPham")
                        .WithMany("DanhSachDanhGia")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDanhGia");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhMuc", b =>
                {
                    b.HasOne("back_end.Core.Models.DanhMuc", "DanhMucCha")
                        .WithMany("DanhSachDanhMucCon")
                        .HasForeignKey("DanhMucChaMaDanhMuc");

                    b.Navigation("DanhMucCha");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhSachYeuThich", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiDung")
                        .WithOne("DanhSachYeuThich")
                        .HasForeignKey("back_end.Core.Models.DanhSachYeuThich", "MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("back_end.Core.Models.DiaChiGiaoHang", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhSachDiaChiGiaoHang")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("back_end.Core.Models.DonHang", b =>
                {
                    b.HasOne("back_end.Core.Models.DiaChiGiaoHang", "DiaChiGiaoHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaDiaChiGiaoHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhSachDonHang")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.ThanhToan", "ThanhToan")
                        .WithOne("DonHang")
                        .HasForeignKey("back_end.Core.Models.DonHang", "MaThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChiGiaoHang");

                    b.Navigation("NguoiDung");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("back_end.Core.Models.HienThiDanhGia", b =>
                {
                    b.HasOne("back_end.Core.Models.DanhGiaSanPham", "DanhGiaSanPham")
                        .WithMany()
                        .HasForeignKey("MaDanhGiaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhGiaSanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.HinhAnhBienTheSanPham", b =>
                {
                    b.HasOne("back_end.Core.Models.BienTheSanPham", "BienTheSanPham")
                        .WithMany("DanhSachHinhAnh")
                        .HasForeignKey("MaBienTheSanPham");

                    b.Navigation("BienTheSanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.HinhAnhSanPham", b =>
                {
                    b.HasOne("back_end.Core.Models.SanPham", "SanPham")
                        .WithMany("DanhSachHinhAnh")
                        .HasForeignKey("MaSanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.LichSuDonHang", b =>
                {
                    b.HasOne("back_end.Core.Models.DonHang", "DonHang")
                        .WithMany("LichSuDonHang")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.NguoiDung", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("DonHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("back_end.Core.Models.NhomChat", b =>
                {
                    b.HasOne("back_end.Core.Models.TinNhan", "TinNhanGanDay")
                        .WithOne("NhomChat")
                        .HasForeignKey("back_end.Core.Models.NhomChat", "MaTinNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TinNhanGanDay");
                });

            modelBuilder.Entity("back_end.Core.Models.SanPham", b =>
                {
                    b.HasOne("back_end.Core.Models.DanhMuc", "DanhMuc")
                        .WithMany("DanhSachSanPham")
                        .HasForeignKey("MaDanhMuc");

                    b.HasOne("back_end.Core.Models.NhaSanXuat", "NhaSanXuat")
                        .WithMany("DanhSachSanPham")
                        .HasForeignKey("MaNhaSanXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.NhanHieu", "NhanHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaNhanHieu");

                    b.Navigation("DanhMuc");

                    b.Navigation("NhaSanXuat");

                    b.Navigation("NhanHieu");
                });

            modelBuilder.Entity("back_end.Core.Models.SanPhamKhuyenMai", b =>
                {
                    b.HasOne("back_end.Core.Models.KhuyenMai", "KhuyenMai")
                        .WithMany("SanPhamKhuyenMais")
                        .HasForeignKey("MaKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.SanPham", "SanPham")
                        .WithMany("SanPhamKhuyenMais")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.ThietBiThongBao", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhSachThietBiThongBao")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("back_end.Core.Models.ThongBao", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiNhan")
                        .WithMany("DanhSachThongBao")
                        .HasForeignKey("MaNguoiNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiNhan");
                });

            modelBuilder.Entity("back_end.Core.Models.TinNhan", b =>
                {
                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiGui")
                        .WithMany("DanhSachTinNhanDaGui")
                        .HasForeignKey("MaNguoiGui")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("back_end.Core.Models.NguoiDung", "NguoiNhan")
                        .WithMany("DanhSachTinNhanDaNhan")
                        .HasForeignKey("MaNguoiNhan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiGui");

                    b.Navigation("NguoiNhan");
                });

            modelBuilder.Entity("back_end.Core.Models.TinNhanHinhAnh", b =>
                {
                    b.HasOne("back_end.Core.Models.TinNhan", "TinNhan")
                        .WithMany("DanhSachHinhAnh")
                        .HasForeignKey("MaTinNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TinNhan");
                });

            modelBuilder.Entity("back_end.Core.Models.BienTheSanPham", b =>
                {
                    b.Navigation("DanhSachChiTietDonHang");

                    b.Navigation("DanhSachHinhAnh");
                });

            modelBuilder.Entity("back_end.Core.Models.DanhMuc", b =>
                {
                    b.Navigation("DanhSachDanhMucCon");

                    b.Navigation("DanhSachSanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.DiaChiGiaoHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("back_end.Core.Models.DonHang", b =>
                {
                    b.Navigation("DanhSachChiTietDonHang");

                    b.Navigation("LichSuDonHang");
                });

            modelBuilder.Entity("back_end.Core.Models.KhuyenMai", b =>
                {
                    b.Navigation("SanPhamKhuyenMais");
                });

            modelBuilder.Entity("back_end.Core.Models.KichThuoc", b =>
                {
                    b.Navigation("DanhSachBienTheSanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.MauSac", b =>
                {
                    b.Navigation("DanhSachBienTheSP");
                });

            modelBuilder.Entity("back_end.Core.Models.NguoiDung", b =>
                {
                    b.Navigation("DanhSachBaiViet");

                    b.Navigation("DanhSachDanhGia");

                    b.Navigation("DanhSachDiaChiGiaoHang");

                    b.Navigation("DanhSachDonHang");

                    b.Navigation("DanhSachThietBiThongBao");

                    b.Navigation("DanhSachThongBao");

                    b.Navigation("DanhSachTinNhanDaGui");

                    b.Navigation("DanhSachTinNhanDaNhan");

                    b.Navigation("DanhSachYeuThich")
                        .IsRequired();
                });

            modelBuilder.Entity("back_end.Core.Models.NhaSanXuat", b =>
                {
                    b.Navigation("DanhSachSanPham");
                });

            modelBuilder.Entity("back_end.Core.Models.NhanHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("back_end.Core.Models.SanPham", b =>
                {
                    b.Navigation("DanhSachBienTheSP");

                    b.Navigation("DanhSachDanhGia");

                    b.Navigation("DanhSachHinhAnh");

                    b.Navigation("SanPhamKhuyenMais");
                });

            modelBuilder.Entity("back_end.Core.Models.ThanhToan", b =>
                {
                    b.Navigation("DonHang")
                        .IsRequired();
                });

            modelBuilder.Entity("back_end.Core.Models.TinNhan", b =>
                {
                    b.Navigation("DanhSachHinhAnh");

                    b.Navigation("NhomChat")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
